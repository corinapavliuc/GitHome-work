1.Как отказаться от изменений в файле (файлах) находящийся в рабочем каталоге (work directory)?
Чтобы отказаться от изменений в файле (файлах) в рабочем каталоге, 
используйте команду `git checkout -- `. Замените `` именем файла,
который вы хотите отменить изменения.

2.Как вернуть файл из индекса в рабочий каталог?
 Чтобы вернуть файл из индекса в рабочий каталог, 
используйте команду `git restore --staged `. 
Замените `` именем файла, который вы хотите вернуть из индекса в рабочий каталог.

3.Как отменить ошибочный commit ?
Чтобы отменить ошибочный commit, вы можете использовать команду `git revert `. Замените ``
на хэш ошибочного коммита, который вы хотите отменить.
Эта команда создаст новый коммит, который отменит изменения, внесенные указанным коммитом.

4.Как исправить коммит отправленный на сервер GitHub?
Чтобы исправить коммит, отправленный на сервер GitHub, вам потребуется выполнить следующие шаги:
   - Отмените последний коммит на локальном репозитории с помощью команды `git commit --amend`.
Затем внесите нужные изменения и снова выполните команду `git commit --amend`, 
чтобы перезаписать последний коммит.
   - Затем выполните команду `git push --force origin `, где `` - это ветка, 
на которую вы отправили неправильный коммит. Обратите внимание, что использование `--force` 
может изменить историю репозитория, поэтому будьте осторожны при использовании этой команды.

5.Как создать новую ветку и переключится в нее?В чем отличение между fast-forward merge  and non fast-forfard merge?
Чтобы создать новую ветку и переключиться на нее, используйте команду `git checkout -b `. 
Замените `` на имя новой ветки,
которую вы хотите создать. После выполнения этой команды вы будете автоматически переключены на новую ветку.


В чем отличение между fast-forward merge  and non fast-forfard merge?
Fast-forward merge (слияние) происходит, когда история изменений в ветке, в которую вы сливаете другую ветку, 
не имеет новых коммитов после разделительного коммита. 
В этом случае Git просто перемещает указатель ветки на последний коммит в сливаемой ветке.
   Non fast-forward merge происходит, когда история изменений в ветке,
в которую вы сливаете другую ветку, имеет новые коммиты после разделительного коммита.
В этом случае Git создает новый коммит с объединенными изменениями из обеих веток
В чем отличение между fast-forward merge  and non fast-forfard merge?


7.Можно ли удалить ветку? Как? 
 Да, ветку можно удалить с помощью команды `git branch -d `. Замените `` на имя ветки, которую вы хотите удалить. Если ветка, которую вы пытаетесь удалить, 
не была слита с другой веткой, Git выдаст предупреждение.
Если вы хотите принудительно удалить ветку, используйте команду `git branch -D `.

